<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".txt" #>
<#@ import namespace="TypeInspector" #>
<#@ import namespace="Microsoft.Cci" #>


var <#= this.ClassName.ToLower() #> = new <#= this.ClassName #>() {
<#
	PushIndent("    ");
    foreach(var prop in Props)
    {
		string initValue = string.Empty;
		if(InitType)
		{
			initValue = initializer.Initialize(prop.Value.ToString());
		}
		
        WriteLine("{0}= {1},", Inspector.GetPropertyName(prop.Key), initValue);
    }
	PopIndent();
#>
};


<#+
	public bool InitType = true;
	Initializer initializer = new Initializer();
	public string ClassName = "Unknown";
	public System.Collections.Generic.IDictionary<IPropertyDefinition, ITypeDefinition> Props = new System.Collections.Generic.Dictionary<IPropertyDefinition, ITypeDefinition>();
#>

<#+
	private string ProcessDate(IPropertyDefinition prop)
	{
		return String.Empty;
	}
#>